// create a runnable jar with jar dependencies stored in lib subdirectory
tasks.whenTaskAdded { task ->
    ['startScripts', 'distTar'].each { String skipTaskName ->
        if (task.name.contains(skipTaskName)) {
            task.enabled = false
        }
    }
}
apply plugin: 'java'
apply plugin: 'application'

// JDK 8
sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = 'edu.mcw.rgd.nlp.utils.ncbi.PMCLibrary'
String myAppName = 'PMCCrawlerPipeline'

repositories {
    mavenCentral()
    maven {
        url 'https://packages.atlassian.com/maven-3rdparty'
    }
}

dependencies {
    implementation fileTree(dir: 'lib', include: '*.jar')
}


jar {
    zip64=true
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version'),
                'Class-Path': configurations.runtimeClasspath .collect { it.getName() }.join(' '),
                'Main-Class': mainClassName
        )
    }
    from {
        configurations.runtimeClasspath.collect{it.isDirectory()?it:zipTree(it)}
    }
}

//distributions {
//    main {
//        baseName = myAppName as Distribution
//    }
//}

tasks.register('createDistro', Copy) {
    def zipFile = file('build/distributions/' + myAppName + '.zip')
    def outputDir = file("build/install")

    from zipTree(zipFile)
    into outputDir
}
createDistro.dependsOn assembleDist


